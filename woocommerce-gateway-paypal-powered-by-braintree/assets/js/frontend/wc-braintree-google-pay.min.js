(()=>{"use strict";jQuery((function(e){class t extends SV_WC_Google_Pay_Handler_v5_15_10{constructor(e){super(e),this.googleMerchantId=e.merchant_id||"",this.braintreeMerchantId=e.gateway_merchant_id||"",this.braintreeClientAuthorization=e.braintree_client_authorization||"",this.forceTokenization=e.force_tokenization||!1,this.braintreeClient=null,this.googlePaymentInstance=null}async init(){await super.init(),await this.createBraintreeClient(),await this.createGooglePaymentComponent()}async createBraintreeClient(){return new Promise(((e,t)=>{braintree.client.create({authorization:this.braintreeClientAuthorization},((a,n)=>{a?t(a):(this.braintreeClient=n,e(n))}))}))}async createGooglePaymentComponent(){return new Promise(((e,t)=>{braintree.googlePayment.create({client:this.braintreeClient,googlePayVersion:2,googleMerchantId:this.googleMerchantId},((a,n)=>{a?t(a):(this.googlePaymentInstance=n,e(n))}))}))}getTokenizationSpecification(){return{type:"PAYMENT_GATEWAY",parameters:{gateway:"braintree"}}}getGooglePaymentDataRequest(e){super.getGooglePaymentDataRequest((t=>{t.allowedPaymentMethods=this.googlePaymentInstance.createPaymentDataRequest().allowedPaymentMethods,t.allowedPaymentMethods[0].parameters.billingAddressRequired=!0,t.allowedPaymentMethods[0].parameters.billingAddressParameters={format:"FULL"},e(t)}))}processPayment(e,t){return e.source="google_pay",e.force_tokenization=this.forceTokenization,super.processPayment(e,(()=>t({transactionState:"SUCCESS"})))}failPayment(e){this.unblockUI(),this.renderErrors([e])}}window.WC_Braintree_Google_Pay_Handler=t,e(document.body).trigger("wc_braintree_google_pay_handler_loaded")}))})();